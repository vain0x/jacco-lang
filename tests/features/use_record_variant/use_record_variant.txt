void assert(int cond_1);

int strcmp(unsigned char const* first_1, unsigned char const* second_1);

int main();

struct Ok {
};

struct Err {
    int code;
    unsigned char const* message;
};

struct Response {
    unsigned char tag_;

    union {
        struct Ok Ok;
        struct Err Err;
    };
};

int main() {
    int match_result_1;
    struct Response Err_1;
    Err_1.tag_ = 1;
    Err_1.Err.code = 1234;
    Err_1.Err.message = (unsigned char const*)"Something wrong.";
    struct Response err_1 = Err_1;
    switch (err_1.tag_) {
        case 1: {
            struct Response const* ref_1 = &err_1;
            struct Err const* Err_ptr_1 = &ref_1->Err;
            int const* code_ptr_1 = &Err_ptr_1->code;
            int code_1 = *code_ptr_1;
            int equal_1 = code_1 == 1234;
            // call_result_1 is killed.
            assert(equal_1);
            struct Response const* ref_2 = &err_1;
            struct Err const* Err_ptr_2 = &ref_2->Err;
            unsigned char const* const* message_ptr_1 = &Err_ptr_2->message;
            unsigned char const* message_1 = *message_ptr_1;
            int call_result_2 = strcmp(message_1, (unsigned char const*)"Something wrong.");
            int equal_2 = call_result_2 == 0;
            // call_result_3 is killed.
            assert(equal_2);
            match_result_1 = 0;
            goto match_next_1;
        }
        default: {
            match_result_1 = 1;
            goto match_next_1;
        }
    }

match_next_1:;
    return match_result_1;
}
