struct I32 {
    int value;
};

struct F64 {
    double value;
};

struct Point {
    double x;
    double y;
};

struct Padded {
    unsigned char a;
    int b;
};

struct MyUnit {
};

struct StructEnum {
    unsigned char tag_;

    union {
        struct I32 I32;
        struct F64 F64;
    };
};

void assert(int cond_1);

int main();

int main() {
    int equal_1;
    int equal_2;
    int equal_3;
    int equal_4;
    int greaterequal_1;
    int equal_5;
    int equal_6;
    int equal_7;
    int equal_8;
    int equal_9;
    int equal_a;
    int equal_b;
    int equal_c;
    equal_1 = 1ULL == 1ULL;
    assert(equal_1);
    equal_2 = 2ULL == 2ULL;
    assert(equal_2);
    equal_3 = 4ULL == 4ULL;
    assert(equal_3);
    equal_4 = 8ULL == 8ULL;
    assert(equal_4);
    greaterequal_1 = 8ULL >= 2ULL;
    assert(greaterequal_1);
    equal_5 = 8ULL == 8ULL;
    assert(equal_5);
    equal_6 = 8ULL == 8ULL;
    assert(equal_6);
    equal_7 = 1ULL == 0ULL;
    assert(equal_7);
    equal_8 = 8ULL == 4ULL;
    assert(equal_8);
    equal_9 = 16ULL == 12ULL;
    assert(equal_9);
    equal_a = 16ULL == 16ULL;
    assert(equal_a);
    equal_b = 8ULL == 8ULL;
    assert(equal_b);
    equal_c = 0ULL == 0ULL;
    assert(equal_c);
    return 0;
}
