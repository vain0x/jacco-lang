#!/bin/bash
# 全ケースを実行する:
# USAGE: ./test

# 1ケースだけ実行する:
# USAGE: ./test empty

# コンパイラの標準入出力は test_stdout.md/test_stderr.md に出力される。

set -eu

f() {
    NAME="$1"
    CATEGORY="${2:-}"

    if test "$CATEGORY" = ""
    then
        SRC="tests/$NAME/$NAME.jacco"
    else
        SRC="tests/$CATEGORY/$NAME/$NAME.jacco"
    fi

    echo 'test: '$SRC
    echo -e '\n## test: '$SRC'\n\n```' | tee -a test_stderr.md >>test_stdout.md
    cargo run --bin jl_tests "$SRC" \
        1> >(tee -a test_stdout.md >&2) \
        2> >(tee -a test_stderr.md | grep -E 'Compiling|panicked|error|ERROR|\.rs\:' 1>&2)
    echo '```' | tee -a test_stderr.md >>test_stdout.md
}

expect_compile_err() {
    NAME="$1"
    CATEGORY="${2:-}"

    if test "$CATEGORY" = ""
    then
        SRC="tests/$NAME/$NAME.jacco"
        ERR="tests/$NAME/${NAME}_stderr.log"
    else
        SRC="tests/$CATEGORY/$NAME/$NAME.jacco"
        ERR="tests/$CATEGORY/$NAME/${NAME}_stderr.log"
    fi

    echo 'test: '$SRC
    echo -e '\n## test: '$SRC'\n\n```' | tee -a test_stderr.md >>test_stdout.md
    RUST_LOG='info' RUST_LOG_TIMESTAMP='off' \
        cargo --quiet run --bin jl_tests "$SRC" \
        1> >(tee -a test_stdout.md >&2) \
        2> >(tee "$ERR" | grep -E 'Compiling|panicked' 1>&2) \
        || :
    # FIXME: コンパイルエラーが報告されなければテストは失敗とみなす。
    echo '```' | tee -a test_stderr.md >>test_stdout.md
}

f_all() {
    f empty
    f exit_with_42
    f extern_fn
    f add
    f arithmetic
    f if
    f let
    f operators
    f complex
    f while
    f loop
    f break
    f continue
    f call_direct
    f return
    f assign
    f unit_like_struct
    f record_struct
    f char
    f bool
    f cast
    f int_types
    f str
    f ptr
    f const
    f call_with_pipe
    f float
    f static_var
    f match
    f enum_consts
    f enum_records
    f label_order_issue issues
    f block
}

ONLY=${1:-''}

: >test_stdout.md
: >test_stderr.md

if ! test -z $ONLY
then
    f $ONLY
else
    f_all

    # その他のテスト
    expect_compile_err syntax_error
    expect_compile_err undefined_local_var name_resolution
fi

# 差分の量を表示する。
git --no-pager diff --stat --relative -- 'tests/*/*.txt'
echo 'FINISH'
